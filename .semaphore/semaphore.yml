# Use the latest stable version of Semaphore 2.0 YML syntax:
version: v1.0

# Used this documentation for as a base:
# https://docs.semaphoreci.com/examples/elixir-phoenix-continuous-integration/

# Name of your pipeline. In this example we connect two pipelines with
# a promotion, so it helps to differentiate what's the job of each.
name: Elixir Phoenix example CI pipeline on Semaphore

# An agent defines the environment in which your code runs.
# It is a combination of one of available machine types and operating
# system images. See:
# https://docs.semaphoreci.com/article/20-machine-types
# https://docs.semaphoreci.com/article/32-ubuntu-1804-image
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

# Blocks make up the structure of a pipeline and are executed sequentially.
# Each block has a task that defines one or many parallel jobs. Jobs define
# the commands to execute.
# See https://docs.semaphoreci.com/article/62-concepts
blocks:
  - name: Set up
    task:
      jobs:
      - name: compile and build plts
        commands:
          # Checkout code from Git repository. This step is mandatory if the
          # job is to work with your code.
          - checkout

          - bin/setup_ci_elixir
          - sem-version elixir 1.10.3

          # Restore dependencies from cache, command won't fail if it's
          # missing. More on caching:
          # - https://docs.semaphoreci.com/article/149-caching
          # - https://docs.semaphoreci.com/article/87-language-elixir
          - cache restore
          # Cache the PLT generated from the dialyzer to speed up pipeline process.
          # As suggested here - https://github.com/jeremyjh/dialyxir#continuous-integration
          # This will need to be rebuilt if elixir or erlang version changes.
          - cache restore dialyzer-plt

          - mix deps.get
          - mix do compile, dialyzer --plt
          - MIX_ENV=test mix compile

          # Store deps after compilation, otherwise rebar3 deps (that is, most
          # Erlang deps) won't be cached:
          - cache store
          - cache store dialyzer-plt priv/plts/

  - name: Analyze code
    task:
      # Commands in prologue run at the beginning of each parallel job.
      # https://docs.semaphoreci.com/article/50-pipeline-yaml
      prologue:
        commands:
        - checkout
        - bin/setup_ci_elixir
        - sem-version elixir 1.10.3
        - cache restore
        - cache restore dialyzer-plt
      # This block contains 3 parallel jobs:
      jobs:
      - name: credo
        commands:
        - mix credo -a

      - name: dialyzer
        commands:
        - mix dialyzer --halt-exit-status --no-compile

      - name: formatter
        commands:
        - mix format --check-formatted

  - name: Run tests
    task:
      prologue:
        commands:
        - checkout
        - bin/setup_ci_elixir
        - sem-version elixir 1.10.3
        - cache restore

      jobs:
      - name: ex_unit
        commands:
        - mix test
